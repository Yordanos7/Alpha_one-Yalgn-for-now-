
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Profile: 'Profile',
  Skill: 'Skill',
  ProfileSkill: 'ProfileSkill',
  Category: 'Category',
  Listing: 'Listing',
  Job: 'Job',
  Proposal: 'Proposal',
  Contract: 'Contract',
  Milestone: 'Milestone',
  Wallet: 'Wallet',
  Transaction: 'Transaction',
  CoinPurchase: 'CoinPurchase',
  Conversation: 'Conversation',
  Message: 'Message',
  Review: 'Review',
  Portfolio: 'Portfolio',
  Notification: 'Notification',
  AdminNote: 'AdminNote',
  Verification: 'Verification',
  Dispute: 'Dispute'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  passwordHash: 'passwordHash',
  role: 'role',
  displayName: 'displayName',
  username: 'username',
  bio: 'bio',
  avatarUrl: 'avatarUrl',
  location: 'location',
  languages: 'languages',
  isActive: 'isActive',
  isVerified: 'isVerified',
  verificationId: 'verificationId',
  profileId: 'profileId',
  coins: 'coins',
  walletId: 'walletId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
} as const

export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


export const AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


export const ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  headline: 'headline',
  hourlyRate: 'hourlyRate',
  currency: 'currency',
  availability: 'availability',
  experience: 'experience',
  education: 'education',
  completedJobs: 'completedJobs',
  successRate: 'successRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


export const SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt'
} as const

export type SkillScalarFieldEnum = (typeof SkillScalarFieldEnum)[keyof typeof SkillScalarFieldEnum]


export const ProfileSkillScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  skillId: 'skillId',
  level: 'level',
  createdAt: 'createdAt'
} as const

export type ProfileSkillScalarFieldEnum = (typeof ProfileSkillScalarFieldEnum)[keyof typeof ProfileSkillScalarFieldEnum]


export const CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt'
} as const

export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


export const ListingScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  title: 'title',
  slug: 'slug',
  description: 'description',
  price: 'price',
  currency: 'currency',
  deliveryDays: 'deliveryDays',
  categoryId: 'categoryId',
  images: 'images',
  tags: 'tags',
  isPublished: 'isPublished',
  rating: 'rating',
  reviewCount: 'reviewCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ListingScalarFieldEnum = (typeof ListingScalarFieldEnum)[keyof typeof ListingScalarFieldEnum]


export const JobScalarFieldEnum = {
  id: 'id',
  seekerId: 'seekerId',
  title: 'title',
  slug: 'slug',
  description: 'description',
  type: 'type',
  budgetMin: 'budgetMin',
  budgetMax: 'budgetMax',
  currency: 'currency',
  deadline: 'deadline',
  status: 'status',
  attachments: 'attachments',
  location: 'location',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type JobScalarFieldEnum = (typeof JobScalarFieldEnum)[keyof typeof JobScalarFieldEnum]


export const ProposalScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  providerId: 'providerId',
  coverLetter: 'coverLetter',
  price: 'price',
  currency: 'currency',
  estimatedDays: 'estimatedDays',
  status: 'status',
  attachments: 'attachments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ProposalScalarFieldEnum = (typeof ProposalScalarFieldEnum)[keyof typeof ProposalScalarFieldEnum]


export const ContractScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  clientId: 'clientId',
  providerId: 'providerId',
  totalAmount: 'totalAmount',
  currency: 'currency',
  status: 'status',
  escrowId: 'escrowId',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ContractScalarFieldEnum = (typeof ContractScalarFieldEnum)[keyof typeof ContractScalarFieldEnum]


export const MilestoneScalarFieldEnum = {
  id: 'id',
  contractId: 'contractId',
  title: 'title',
  description: 'description',
  amount: 'amount',
  dueDate: 'dueDate',
  isPaid: 'isPaid',
  createdAt: 'createdAt'
} as const

export type MilestoneScalarFieldEnum = (typeof MilestoneScalarFieldEnum)[keyof typeof MilestoneScalarFieldEnum]


export const WalletScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  balance: 'balance',
  currency: 'currency',
  createdAt: 'createdAt'
} as const

export type WalletScalarFieldEnum = (typeof WalletScalarFieldEnum)[keyof typeof WalletScalarFieldEnum]


export const TransactionScalarFieldEnum = {
  id: 'id',
  walletId: 'walletId',
  type: 'type',
  amount: 'amount',
  currency: 'currency',
  meta: 'meta',
  createdAt: 'createdAt'
} as const

export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


export const CoinPurchaseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  coins: 'coins',
  amount: 'amount',
  currency: 'currency',
  provider: 'provider',
  meta: 'meta',
  createdAt: 'createdAt'
} as const

export type CoinPurchaseScalarFieldEnum = (typeof CoinPurchaseScalarFieldEnum)[keyof typeof CoinPurchaseScalarFieldEnum]


export const ConversationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  projectId: 'projectId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ConversationScalarFieldEnum = (typeof ConversationScalarFieldEnum)[keyof typeof ConversationScalarFieldEnum]


export const MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  fromUserId: 'fromUserId',
  toUserId: 'toUserId',
  body: 'body',
  attachments: 'attachments',
  isRead: 'isRead',
  createdAt: 'createdAt'
} as const

export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


export const ReviewScalarFieldEnum = {
  id: 'id',
  aboutId: 'aboutId',
  byId: 'byId',
  rating: 'rating',
  comment: 'comment',
  contractId: 'contractId',
  createdAt: 'createdAt'
} as const

export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


export const PortfolioScalarFieldEnum = {
  id: 'id',
  profileId: 'profileId',
  title: 'title',
  description: 'description',
  media: 'media',
  link: 'link',
  createdAt: 'createdAt'
} as const

export type PortfolioScalarFieldEnum = (typeof PortfolioScalarFieldEnum)[keyof typeof PortfolioScalarFieldEnum]


export const NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  body: 'body',
  payload: 'payload',
  isRead: 'isRead',
  createdAt: 'createdAt'
} as const

export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


export const AdminNoteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  note: 'note',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
} as const

export type AdminNoteScalarFieldEnum = (typeof AdminNoteScalarFieldEnum)[keyof typeof AdminNoteScalarFieldEnum]


export const VerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  faidaIdNumber: 'faidaIdNumber',
  documents: 'documents',
  status: 'status',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  notes: 'notes',
  createdAt: 'createdAt'
} as const

export type VerificationScalarFieldEnum = (typeof VerificationScalarFieldEnum)[keyof typeof VerificationScalarFieldEnum]


export const DisputeScalarFieldEnum = {
  id: 'id',
  contractId: 'contractId',
  raisedBy: 'raisedBy',
  reason: 'reason',
  status: 'status',
  resolution: 'resolution',
  createdAt: 'createdAt'
} as const

export type DisputeScalarFieldEnum = (typeof DisputeScalarFieldEnum)[keyof typeof DisputeScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]

