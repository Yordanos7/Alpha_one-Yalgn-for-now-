
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ProfileSkill` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProfileSkill
 * 
 */
export type ProfileSkillModel = runtime.Types.Result.DefaultSelection<Prisma.$ProfileSkillPayload>

export type AggregateProfileSkill = {
  _count: ProfileSkillCountAggregateOutputType | null
  _avg: ProfileSkillAvgAggregateOutputType | null
  _sum: ProfileSkillSumAggregateOutputType | null
  _min: ProfileSkillMinAggregateOutputType | null
  _max: ProfileSkillMaxAggregateOutputType | null
}

export type ProfileSkillAvgAggregateOutputType = {
  level: number | null
}

export type ProfileSkillSumAggregateOutputType = {
  level: number | null
}

export type ProfileSkillMinAggregateOutputType = {
  id: string | null
  profileId: string | null
  skillId: string | null
  level: number | null
  createdAt: Date | null
}

export type ProfileSkillMaxAggregateOutputType = {
  id: string | null
  profileId: string | null
  skillId: string | null
  level: number | null
  createdAt: Date | null
}

export type ProfileSkillCountAggregateOutputType = {
  id: number
  profileId: number
  skillId: number
  level: number
  createdAt: number
  _all: number
}


export type ProfileSkillAvgAggregateInputType = {
  level?: true
}

export type ProfileSkillSumAggregateInputType = {
  level?: true
}

export type ProfileSkillMinAggregateInputType = {
  id?: true
  profileId?: true
  skillId?: true
  level?: true
  createdAt?: true
}

export type ProfileSkillMaxAggregateInputType = {
  id?: true
  profileId?: true
  skillId?: true
  level?: true
  createdAt?: true
}

export type ProfileSkillCountAggregateInputType = {
  id?: true
  profileId?: true
  skillId?: true
  level?: true
  createdAt?: true
  _all?: true
}

export type ProfileSkillAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProfileSkill to aggregate.
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProfileSkills to fetch.
   */
  orderBy?: Prisma.ProfileSkillOrderByWithRelationInput | Prisma.ProfileSkillOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProfileSkillWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProfileSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProfileSkills.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProfileSkills
  **/
  _count?: true | ProfileSkillCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProfileSkillAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProfileSkillSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProfileSkillMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProfileSkillMaxAggregateInputType
}

export type GetProfileSkillAggregateType<T extends ProfileSkillAggregateArgs> = {
      [P in keyof T & keyof AggregateProfileSkill]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProfileSkill[P]>
    : Prisma.GetScalarType<T[P], AggregateProfileSkill[P]>
}




export type ProfileSkillGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProfileSkillWhereInput
  orderBy?: Prisma.ProfileSkillOrderByWithAggregationInput | Prisma.ProfileSkillOrderByWithAggregationInput[]
  by: Prisma.ProfileSkillScalarFieldEnum[] | Prisma.ProfileSkillScalarFieldEnum
  having?: Prisma.ProfileSkillScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProfileSkillCountAggregateInputType | true
  _avg?: ProfileSkillAvgAggregateInputType
  _sum?: ProfileSkillSumAggregateInputType
  _min?: ProfileSkillMinAggregateInputType
  _max?: ProfileSkillMaxAggregateInputType
}

export type ProfileSkillGroupByOutputType = {
  id: string
  profileId: string
  skillId: string
  level: number
  createdAt: Date
  _count: ProfileSkillCountAggregateOutputType | null
  _avg: ProfileSkillAvgAggregateOutputType | null
  _sum: ProfileSkillSumAggregateOutputType | null
  _min: ProfileSkillMinAggregateOutputType | null
  _max: ProfileSkillMaxAggregateOutputType | null
}

type GetProfileSkillGroupByPayload<T extends ProfileSkillGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProfileSkillGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProfileSkillGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProfileSkillGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProfileSkillGroupByOutputType[P]>
      }
    >
  >



export type ProfileSkillWhereInput = {
  AND?: Prisma.ProfileSkillWhereInput | Prisma.ProfileSkillWhereInput[]
  OR?: Prisma.ProfileSkillWhereInput[]
  NOT?: Prisma.ProfileSkillWhereInput | Prisma.ProfileSkillWhereInput[]
  id?: Prisma.StringFilter<"ProfileSkill"> | string
  profileId?: Prisma.StringFilter<"ProfileSkill"> | string
  skillId?: Prisma.StringFilter<"ProfileSkill"> | string
  level?: Prisma.IntFilter<"ProfileSkill"> | number
  createdAt?: Prisma.DateTimeFilter<"ProfileSkill"> | Date | string
  profile?: Prisma.XOR<Prisma.ProfileScalarRelationFilter, Prisma.ProfileWhereInput>
  skill?: Prisma.XOR<Prisma.SkillScalarRelationFilter, Prisma.SkillWhereInput>
}

export type ProfileSkillOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  profileId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  level?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  profile?: Prisma.ProfileOrderByWithRelationInput
  skill?: Prisma.SkillOrderByWithRelationInput
}

export type ProfileSkillWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  profileId_skillId?: Prisma.ProfileSkillProfileIdSkillIdCompoundUniqueInput
  AND?: Prisma.ProfileSkillWhereInput | Prisma.ProfileSkillWhereInput[]
  OR?: Prisma.ProfileSkillWhereInput[]
  NOT?: Prisma.ProfileSkillWhereInput | Prisma.ProfileSkillWhereInput[]
  profileId?: Prisma.StringFilter<"ProfileSkill"> | string
  skillId?: Prisma.StringFilter<"ProfileSkill"> | string
  level?: Prisma.IntFilter<"ProfileSkill"> | number
  createdAt?: Prisma.DateTimeFilter<"ProfileSkill"> | Date | string
  profile?: Prisma.XOR<Prisma.ProfileScalarRelationFilter, Prisma.ProfileWhereInput>
  skill?: Prisma.XOR<Prisma.SkillScalarRelationFilter, Prisma.SkillWhereInput>
}, "id" | "profileId_skillId">

export type ProfileSkillOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  profileId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  level?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.ProfileSkillCountOrderByAggregateInput
  _avg?: Prisma.ProfileSkillAvgOrderByAggregateInput
  _max?: Prisma.ProfileSkillMaxOrderByAggregateInput
  _min?: Prisma.ProfileSkillMinOrderByAggregateInput
  _sum?: Prisma.ProfileSkillSumOrderByAggregateInput
}

export type ProfileSkillScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProfileSkillScalarWhereWithAggregatesInput | Prisma.ProfileSkillScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProfileSkillScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProfileSkillScalarWhereWithAggregatesInput | Prisma.ProfileSkillScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProfileSkill"> | string
  profileId?: Prisma.StringWithAggregatesFilter<"ProfileSkill"> | string
  skillId?: Prisma.StringWithAggregatesFilter<"ProfileSkill"> | string
  level?: Prisma.IntWithAggregatesFilter<"ProfileSkill"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProfileSkill"> | Date | string
}

export type ProfileSkillCreateInput = {
  id?: string
  level?: number
  createdAt?: Date | string
  profile: Prisma.ProfileCreateNestedOneWithoutSkillsInput
  skill: Prisma.SkillCreateNestedOneWithoutProfilesInput
}

export type ProfileSkillUncheckedCreateInput = {
  id?: string
  profileId: string
  skillId: string
  level?: number
  createdAt?: Date | string
}

export type ProfileSkillUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneRequiredWithoutSkillsNestedInput
  skill?: Prisma.SkillUpdateOneRequiredWithoutProfilesNestedInput
}

export type ProfileSkillUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  profileId?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProfileSkillCreateManyInput = {
  id?: string
  profileId: string
  skillId: string
  level?: number
  createdAt?: Date | string
}

export type ProfileSkillUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProfileSkillUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  profileId?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProfileSkillListRelationFilter = {
  every?: Prisma.ProfileSkillWhereInput
  some?: Prisma.ProfileSkillWhereInput
  none?: Prisma.ProfileSkillWhereInput
}

export type ProfileSkillOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProfileSkillProfileIdSkillIdCompoundUniqueInput = {
  profileId: string
  skillId: string
}

export type ProfileSkillCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  profileId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  level?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ProfileSkillAvgOrderByAggregateInput = {
  level?: Prisma.SortOrder
}

export type ProfileSkillMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  profileId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  level?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ProfileSkillMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  profileId?: Prisma.SortOrder
  skillId?: Prisma.SortOrder
  level?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type ProfileSkillSumOrderByAggregateInput = {
  level?: Prisma.SortOrder
}

export type ProfileSkillCreateNestedManyWithoutProfileInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutProfileInput, Prisma.ProfileSkillUncheckedCreateWithoutProfileInput> | Prisma.ProfileSkillCreateWithoutProfileInput[] | Prisma.ProfileSkillUncheckedCreateWithoutProfileInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutProfileInput | Prisma.ProfileSkillCreateOrConnectWithoutProfileInput[]
  createMany?: Prisma.ProfileSkillCreateManyProfileInputEnvelope
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
}

export type ProfileSkillUncheckedCreateNestedManyWithoutProfileInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutProfileInput, Prisma.ProfileSkillUncheckedCreateWithoutProfileInput> | Prisma.ProfileSkillCreateWithoutProfileInput[] | Prisma.ProfileSkillUncheckedCreateWithoutProfileInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutProfileInput | Prisma.ProfileSkillCreateOrConnectWithoutProfileInput[]
  createMany?: Prisma.ProfileSkillCreateManyProfileInputEnvelope
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
}

export type ProfileSkillUpdateManyWithoutProfileNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutProfileInput, Prisma.ProfileSkillUncheckedCreateWithoutProfileInput> | Prisma.ProfileSkillCreateWithoutProfileInput[] | Prisma.ProfileSkillUncheckedCreateWithoutProfileInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutProfileInput | Prisma.ProfileSkillCreateOrConnectWithoutProfileInput[]
  upsert?: Prisma.ProfileSkillUpsertWithWhereUniqueWithoutProfileInput | Prisma.ProfileSkillUpsertWithWhereUniqueWithoutProfileInput[]
  createMany?: Prisma.ProfileSkillCreateManyProfileInputEnvelope
  set?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  disconnect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  delete?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  update?: Prisma.ProfileSkillUpdateWithWhereUniqueWithoutProfileInput | Prisma.ProfileSkillUpdateWithWhereUniqueWithoutProfileInput[]
  updateMany?: Prisma.ProfileSkillUpdateManyWithWhereWithoutProfileInput | Prisma.ProfileSkillUpdateManyWithWhereWithoutProfileInput[]
  deleteMany?: Prisma.ProfileSkillScalarWhereInput | Prisma.ProfileSkillScalarWhereInput[]
}

export type ProfileSkillUncheckedUpdateManyWithoutProfileNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutProfileInput, Prisma.ProfileSkillUncheckedCreateWithoutProfileInput> | Prisma.ProfileSkillCreateWithoutProfileInput[] | Prisma.ProfileSkillUncheckedCreateWithoutProfileInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutProfileInput | Prisma.ProfileSkillCreateOrConnectWithoutProfileInput[]
  upsert?: Prisma.ProfileSkillUpsertWithWhereUniqueWithoutProfileInput | Prisma.ProfileSkillUpsertWithWhereUniqueWithoutProfileInput[]
  createMany?: Prisma.ProfileSkillCreateManyProfileInputEnvelope
  set?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  disconnect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  delete?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  update?: Prisma.ProfileSkillUpdateWithWhereUniqueWithoutProfileInput | Prisma.ProfileSkillUpdateWithWhereUniqueWithoutProfileInput[]
  updateMany?: Prisma.ProfileSkillUpdateManyWithWhereWithoutProfileInput | Prisma.ProfileSkillUpdateManyWithWhereWithoutProfileInput[]
  deleteMany?: Prisma.ProfileSkillScalarWhereInput | Prisma.ProfileSkillScalarWhereInput[]
}

export type ProfileSkillCreateNestedManyWithoutSkillInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutSkillInput, Prisma.ProfileSkillUncheckedCreateWithoutSkillInput> | Prisma.ProfileSkillCreateWithoutSkillInput[] | Prisma.ProfileSkillUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutSkillInput | Prisma.ProfileSkillCreateOrConnectWithoutSkillInput[]
  createMany?: Prisma.ProfileSkillCreateManySkillInputEnvelope
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
}

export type ProfileSkillUncheckedCreateNestedManyWithoutSkillInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutSkillInput, Prisma.ProfileSkillUncheckedCreateWithoutSkillInput> | Prisma.ProfileSkillCreateWithoutSkillInput[] | Prisma.ProfileSkillUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutSkillInput | Prisma.ProfileSkillCreateOrConnectWithoutSkillInput[]
  createMany?: Prisma.ProfileSkillCreateManySkillInputEnvelope
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
}

export type ProfileSkillUpdateManyWithoutSkillNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutSkillInput, Prisma.ProfileSkillUncheckedCreateWithoutSkillInput> | Prisma.ProfileSkillCreateWithoutSkillInput[] | Prisma.ProfileSkillUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutSkillInput | Prisma.ProfileSkillCreateOrConnectWithoutSkillInput[]
  upsert?: Prisma.ProfileSkillUpsertWithWhereUniqueWithoutSkillInput | Prisma.ProfileSkillUpsertWithWhereUniqueWithoutSkillInput[]
  createMany?: Prisma.ProfileSkillCreateManySkillInputEnvelope
  set?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  disconnect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  delete?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  update?: Prisma.ProfileSkillUpdateWithWhereUniqueWithoutSkillInput | Prisma.ProfileSkillUpdateWithWhereUniqueWithoutSkillInput[]
  updateMany?: Prisma.ProfileSkillUpdateManyWithWhereWithoutSkillInput | Prisma.ProfileSkillUpdateManyWithWhereWithoutSkillInput[]
  deleteMany?: Prisma.ProfileSkillScalarWhereInput | Prisma.ProfileSkillScalarWhereInput[]
}

export type ProfileSkillUncheckedUpdateManyWithoutSkillNestedInput = {
  create?: Prisma.XOR<Prisma.ProfileSkillCreateWithoutSkillInput, Prisma.ProfileSkillUncheckedCreateWithoutSkillInput> | Prisma.ProfileSkillCreateWithoutSkillInput[] | Prisma.ProfileSkillUncheckedCreateWithoutSkillInput[]
  connectOrCreate?: Prisma.ProfileSkillCreateOrConnectWithoutSkillInput | Prisma.ProfileSkillCreateOrConnectWithoutSkillInput[]
  upsert?: Prisma.ProfileSkillUpsertWithWhereUniqueWithoutSkillInput | Prisma.ProfileSkillUpsertWithWhereUniqueWithoutSkillInput[]
  createMany?: Prisma.ProfileSkillCreateManySkillInputEnvelope
  set?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  disconnect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  delete?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  connect?: Prisma.ProfileSkillWhereUniqueInput | Prisma.ProfileSkillWhereUniqueInput[]
  update?: Prisma.ProfileSkillUpdateWithWhereUniqueWithoutSkillInput | Prisma.ProfileSkillUpdateWithWhereUniqueWithoutSkillInput[]
  updateMany?: Prisma.ProfileSkillUpdateManyWithWhereWithoutSkillInput | Prisma.ProfileSkillUpdateManyWithWhereWithoutSkillInput[]
  deleteMany?: Prisma.ProfileSkillScalarWhereInput | Prisma.ProfileSkillScalarWhereInput[]
}

export type ProfileSkillCreateWithoutProfileInput = {
  id?: string
  level?: number
  createdAt?: Date | string
  skill: Prisma.SkillCreateNestedOneWithoutProfilesInput
}

export type ProfileSkillUncheckedCreateWithoutProfileInput = {
  id?: string
  skillId: string
  level?: number
  createdAt?: Date | string
}

export type ProfileSkillCreateOrConnectWithoutProfileInput = {
  where: Prisma.ProfileSkillWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileSkillCreateWithoutProfileInput, Prisma.ProfileSkillUncheckedCreateWithoutProfileInput>
}

export type ProfileSkillCreateManyProfileInputEnvelope = {
  data: Prisma.ProfileSkillCreateManyProfileInput | Prisma.ProfileSkillCreateManyProfileInput[]
  skipDuplicates?: boolean
}

export type ProfileSkillUpsertWithWhereUniqueWithoutProfileInput = {
  where: Prisma.ProfileSkillWhereUniqueInput
  update: Prisma.XOR<Prisma.ProfileSkillUpdateWithoutProfileInput, Prisma.ProfileSkillUncheckedUpdateWithoutProfileInput>
  create: Prisma.XOR<Prisma.ProfileSkillCreateWithoutProfileInput, Prisma.ProfileSkillUncheckedCreateWithoutProfileInput>
}

export type ProfileSkillUpdateWithWhereUniqueWithoutProfileInput = {
  where: Prisma.ProfileSkillWhereUniqueInput
  data: Prisma.XOR<Prisma.ProfileSkillUpdateWithoutProfileInput, Prisma.ProfileSkillUncheckedUpdateWithoutProfileInput>
}

export type ProfileSkillUpdateManyWithWhereWithoutProfileInput = {
  where: Prisma.ProfileSkillScalarWhereInput
  data: Prisma.XOR<Prisma.ProfileSkillUpdateManyMutationInput, Prisma.ProfileSkillUncheckedUpdateManyWithoutProfileInput>
}

export type ProfileSkillScalarWhereInput = {
  AND?: Prisma.ProfileSkillScalarWhereInput | Prisma.ProfileSkillScalarWhereInput[]
  OR?: Prisma.ProfileSkillScalarWhereInput[]
  NOT?: Prisma.ProfileSkillScalarWhereInput | Prisma.ProfileSkillScalarWhereInput[]
  id?: Prisma.StringFilter<"ProfileSkill"> | string
  profileId?: Prisma.StringFilter<"ProfileSkill"> | string
  skillId?: Prisma.StringFilter<"ProfileSkill"> | string
  level?: Prisma.IntFilter<"ProfileSkill"> | number
  createdAt?: Prisma.DateTimeFilter<"ProfileSkill"> | Date | string
}

export type ProfileSkillCreateWithoutSkillInput = {
  id?: string
  level?: number
  createdAt?: Date | string
  profile: Prisma.ProfileCreateNestedOneWithoutSkillsInput
}

export type ProfileSkillUncheckedCreateWithoutSkillInput = {
  id?: string
  profileId: string
  level?: number
  createdAt?: Date | string
}

export type ProfileSkillCreateOrConnectWithoutSkillInput = {
  where: Prisma.ProfileSkillWhereUniqueInput
  create: Prisma.XOR<Prisma.ProfileSkillCreateWithoutSkillInput, Prisma.ProfileSkillUncheckedCreateWithoutSkillInput>
}

export type ProfileSkillCreateManySkillInputEnvelope = {
  data: Prisma.ProfileSkillCreateManySkillInput | Prisma.ProfileSkillCreateManySkillInput[]
  skipDuplicates?: boolean
}

export type ProfileSkillUpsertWithWhereUniqueWithoutSkillInput = {
  where: Prisma.ProfileSkillWhereUniqueInput
  update: Prisma.XOR<Prisma.ProfileSkillUpdateWithoutSkillInput, Prisma.ProfileSkillUncheckedUpdateWithoutSkillInput>
  create: Prisma.XOR<Prisma.ProfileSkillCreateWithoutSkillInput, Prisma.ProfileSkillUncheckedCreateWithoutSkillInput>
}

export type ProfileSkillUpdateWithWhereUniqueWithoutSkillInput = {
  where: Prisma.ProfileSkillWhereUniqueInput
  data: Prisma.XOR<Prisma.ProfileSkillUpdateWithoutSkillInput, Prisma.ProfileSkillUncheckedUpdateWithoutSkillInput>
}

export type ProfileSkillUpdateManyWithWhereWithoutSkillInput = {
  where: Prisma.ProfileSkillScalarWhereInput
  data: Prisma.XOR<Prisma.ProfileSkillUpdateManyMutationInput, Prisma.ProfileSkillUncheckedUpdateManyWithoutSkillInput>
}

export type ProfileSkillCreateManyProfileInput = {
  id?: string
  skillId: string
  level?: number
  createdAt?: Date | string
}

export type ProfileSkillUpdateWithoutProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  skill?: Prisma.SkillUpdateOneRequiredWithoutProfilesNestedInput
}

export type ProfileSkillUncheckedUpdateWithoutProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProfileSkillUncheckedUpdateManyWithoutProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  skillId?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProfileSkillCreateManySkillInput = {
  id?: string
  profileId: string
  level?: number
  createdAt?: Date | string
}

export type ProfileSkillUpdateWithoutSkillInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneRequiredWithoutSkillsNestedInput
}

export type ProfileSkillUncheckedUpdateWithoutSkillInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  profileId?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProfileSkillUncheckedUpdateManyWithoutSkillInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  profileId?: Prisma.StringFieldUpdateOperationsInput | string
  level?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ProfileSkillSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  profileId?: boolean
  skillId?: boolean
  level?: boolean
  createdAt?: boolean
  profile?: boolean | Prisma.ProfileDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>
}, ExtArgs["result"]["profileSkill"]>

export type ProfileSkillSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  profileId?: boolean
  skillId?: boolean
  level?: boolean
  createdAt?: boolean
  profile?: boolean | Prisma.ProfileDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>
}, ExtArgs["result"]["profileSkill"]>

export type ProfileSkillSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  profileId?: boolean
  skillId?: boolean
  level?: boolean
  createdAt?: boolean
  profile?: boolean | Prisma.ProfileDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>
}, ExtArgs["result"]["profileSkill"]>

export type ProfileSkillSelectScalar = {
  id?: boolean
  profileId?: boolean
  skillId?: boolean
  level?: boolean
  createdAt?: boolean
}

export type ProfileSkillOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "profileId" | "skillId" | "level" | "createdAt", ExtArgs["result"]["profileSkill"]>
export type ProfileSkillInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  profile?: boolean | Prisma.ProfileDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>
}
export type ProfileSkillIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  profile?: boolean | Prisma.ProfileDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>
}
export type ProfileSkillIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  profile?: boolean | Prisma.ProfileDefaultArgs<ExtArgs>
  skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>
}

export type $ProfileSkillPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProfileSkill"
  objects: {
    profile: Prisma.$ProfilePayload<ExtArgs>
    skill: Prisma.$SkillPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    profileId: string
    skillId: string
    level: number
    createdAt: Date
  }, ExtArgs["result"]["profileSkill"]>
  composites: {}
}

export type ProfileSkillGetPayload<S extends boolean | null | undefined | ProfileSkillDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload, S>

export type ProfileSkillCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProfileSkillFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProfileSkillCountAggregateInputType | true
  }

export interface ProfileSkillDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProfileSkill'], meta: { name: 'ProfileSkill' } }
  /**
   * Find zero or one ProfileSkill that matches the filter.
   * @param {ProfileSkillFindUniqueArgs} args - Arguments to find a ProfileSkill
   * @example
   * // Get one ProfileSkill
   * const profileSkill = await prisma.profileSkill.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProfileSkillFindUniqueArgs>(args: Prisma.SelectSubset<T, ProfileSkillFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProfileSkill that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProfileSkillFindUniqueOrThrowArgs} args - Arguments to find a ProfileSkill
   * @example
   * // Get one ProfileSkill
   * const profileSkill = await prisma.profileSkill.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProfileSkillFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProfileSkillFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProfileSkill that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillFindFirstArgs} args - Arguments to find a ProfileSkill
   * @example
   * // Get one ProfileSkill
   * const profileSkill = await prisma.profileSkill.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProfileSkillFindFirstArgs>(args?: Prisma.SelectSubset<T, ProfileSkillFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProfileSkill that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillFindFirstOrThrowArgs} args - Arguments to find a ProfileSkill
   * @example
   * // Get one ProfileSkill
   * const profileSkill = await prisma.profileSkill.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProfileSkillFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProfileSkillFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProfileSkills that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProfileSkills
   * const profileSkills = await prisma.profileSkill.findMany()
   * 
   * // Get first 10 ProfileSkills
   * const profileSkills = await prisma.profileSkill.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const profileSkillWithIdOnly = await prisma.profileSkill.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProfileSkillFindManyArgs>(args?: Prisma.SelectSubset<T, ProfileSkillFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProfileSkill.
   * @param {ProfileSkillCreateArgs} args - Arguments to create a ProfileSkill.
   * @example
   * // Create one ProfileSkill
   * const ProfileSkill = await prisma.profileSkill.create({
   *   data: {
   *     // ... data to create a ProfileSkill
   *   }
   * })
   * 
   */
  create<T extends ProfileSkillCreateArgs>(args: Prisma.SelectSubset<T, ProfileSkillCreateArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProfileSkills.
   * @param {ProfileSkillCreateManyArgs} args - Arguments to create many ProfileSkills.
   * @example
   * // Create many ProfileSkills
   * const profileSkill = await prisma.profileSkill.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProfileSkillCreateManyArgs>(args?: Prisma.SelectSubset<T, ProfileSkillCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProfileSkills and returns the data saved in the database.
   * @param {ProfileSkillCreateManyAndReturnArgs} args - Arguments to create many ProfileSkills.
   * @example
   * // Create many ProfileSkills
   * const profileSkill = await prisma.profileSkill.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProfileSkills and only return the `id`
   * const profileSkillWithIdOnly = await prisma.profileSkill.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProfileSkillCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProfileSkillCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProfileSkill.
   * @param {ProfileSkillDeleteArgs} args - Arguments to delete one ProfileSkill.
   * @example
   * // Delete one ProfileSkill
   * const ProfileSkill = await prisma.profileSkill.delete({
   *   where: {
   *     // ... filter to delete one ProfileSkill
   *   }
   * })
   * 
   */
  delete<T extends ProfileSkillDeleteArgs>(args: Prisma.SelectSubset<T, ProfileSkillDeleteArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProfileSkill.
   * @param {ProfileSkillUpdateArgs} args - Arguments to update one ProfileSkill.
   * @example
   * // Update one ProfileSkill
   * const profileSkill = await prisma.profileSkill.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProfileSkillUpdateArgs>(args: Prisma.SelectSubset<T, ProfileSkillUpdateArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProfileSkills.
   * @param {ProfileSkillDeleteManyArgs} args - Arguments to filter ProfileSkills to delete.
   * @example
   * // Delete a few ProfileSkills
   * const { count } = await prisma.profileSkill.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProfileSkillDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProfileSkillDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProfileSkills.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProfileSkills
   * const profileSkill = await prisma.profileSkill.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProfileSkillUpdateManyArgs>(args: Prisma.SelectSubset<T, ProfileSkillUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProfileSkills and returns the data updated in the database.
   * @param {ProfileSkillUpdateManyAndReturnArgs} args - Arguments to update many ProfileSkills.
   * @example
   * // Update many ProfileSkills
   * const profileSkill = await prisma.profileSkill.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProfileSkills and only return the `id`
   * const profileSkillWithIdOnly = await prisma.profileSkill.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProfileSkillUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProfileSkillUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProfileSkill.
   * @param {ProfileSkillUpsertArgs} args - Arguments to update or create a ProfileSkill.
   * @example
   * // Update or create a ProfileSkill
   * const profileSkill = await prisma.profileSkill.upsert({
   *   create: {
   *     // ... data to create a ProfileSkill
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProfileSkill we want to update
   *   }
   * })
   */
  upsert<T extends ProfileSkillUpsertArgs>(args: Prisma.SelectSubset<T, ProfileSkillUpsertArgs<ExtArgs>>): Prisma.Prisma__ProfileSkillClient<runtime.Types.Result.GetResult<Prisma.$ProfileSkillPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProfileSkills.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillCountArgs} args - Arguments to filter ProfileSkills to count.
   * @example
   * // Count the number of ProfileSkills
   * const count = await prisma.profileSkill.count({
   *   where: {
   *     // ... the filter for the ProfileSkills we want to count
   *   }
   * })
  **/
  count<T extends ProfileSkillCountArgs>(
    args?: Prisma.Subset<T, ProfileSkillCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProfileSkillCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProfileSkill.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProfileSkillAggregateArgs>(args: Prisma.Subset<T, ProfileSkillAggregateArgs>): Prisma.PrismaPromise<GetProfileSkillAggregateType<T>>

  /**
   * Group by ProfileSkill.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProfileSkillGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProfileSkillGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProfileSkillGroupByArgs['orderBy'] }
      : { orderBy?: ProfileSkillGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProfileSkillGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileSkillGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProfileSkill model
 */
readonly fields: ProfileSkillFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProfileSkill.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProfileSkillClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  profile<T extends Prisma.ProfileDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProfileDefaultArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  skill<T extends Prisma.SkillDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SkillDefaultArgs<ExtArgs>>): Prisma.Prisma__SkillClient<runtime.Types.Result.GetResult<Prisma.$SkillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProfileSkill model
 */
export interface ProfileSkillFieldRefs {
  readonly id: Prisma.FieldRef<"ProfileSkill", 'String'>
  readonly profileId: Prisma.FieldRef<"ProfileSkill", 'String'>
  readonly skillId: Prisma.FieldRef<"ProfileSkill", 'String'>
  readonly level: Prisma.FieldRef<"ProfileSkill", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ProfileSkill", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ProfileSkill findUnique
 */
export type ProfileSkillFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * Filter, which ProfileSkill to fetch.
   */
  where: Prisma.ProfileSkillWhereUniqueInput
}

/**
 * ProfileSkill findUniqueOrThrow
 */
export type ProfileSkillFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * Filter, which ProfileSkill to fetch.
   */
  where: Prisma.ProfileSkillWhereUniqueInput
}

/**
 * ProfileSkill findFirst
 */
export type ProfileSkillFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * Filter, which ProfileSkill to fetch.
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProfileSkills to fetch.
   */
  orderBy?: Prisma.ProfileSkillOrderByWithRelationInput | Prisma.ProfileSkillOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProfileSkills.
   */
  cursor?: Prisma.ProfileSkillWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProfileSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProfileSkills.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProfileSkills.
   */
  distinct?: Prisma.ProfileSkillScalarFieldEnum | Prisma.ProfileSkillScalarFieldEnum[]
}

/**
 * ProfileSkill findFirstOrThrow
 */
export type ProfileSkillFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * Filter, which ProfileSkill to fetch.
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProfileSkills to fetch.
   */
  orderBy?: Prisma.ProfileSkillOrderByWithRelationInput | Prisma.ProfileSkillOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProfileSkills.
   */
  cursor?: Prisma.ProfileSkillWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProfileSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProfileSkills.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProfileSkills.
   */
  distinct?: Prisma.ProfileSkillScalarFieldEnum | Prisma.ProfileSkillScalarFieldEnum[]
}

/**
 * ProfileSkill findMany
 */
export type ProfileSkillFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * Filter, which ProfileSkills to fetch.
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProfileSkills to fetch.
   */
  orderBy?: Prisma.ProfileSkillOrderByWithRelationInput | Prisma.ProfileSkillOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProfileSkills.
   */
  cursor?: Prisma.ProfileSkillWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProfileSkills from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProfileSkills.
   */
  skip?: number
  distinct?: Prisma.ProfileSkillScalarFieldEnum | Prisma.ProfileSkillScalarFieldEnum[]
}

/**
 * ProfileSkill create
 */
export type ProfileSkillCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * The data needed to create a ProfileSkill.
   */
  data: Prisma.XOR<Prisma.ProfileSkillCreateInput, Prisma.ProfileSkillUncheckedCreateInput>
}

/**
 * ProfileSkill createMany
 */
export type ProfileSkillCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProfileSkills.
   */
  data: Prisma.ProfileSkillCreateManyInput | Prisma.ProfileSkillCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProfileSkill createManyAndReturn
 */
export type ProfileSkillCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * The data used to create many ProfileSkills.
   */
  data: Prisma.ProfileSkillCreateManyInput | Prisma.ProfileSkillCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ProfileSkill update
 */
export type ProfileSkillUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * The data needed to update a ProfileSkill.
   */
  data: Prisma.XOR<Prisma.ProfileSkillUpdateInput, Prisma.ProfileSkillUncheckedUpdateInput>
  /**
   * Choose, which ProfileSkill to update.
   */
  where: Prisma.ProfileSkillWhereUniqueInput
}

/**
 * ProfileSkill updateMany
 */
export type ProfileSkillUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProfileSkills.
   */
  data: Prisma.XOR<Prisma.ProfileSkillUpdateManyMutationInput, Prisma.ProfileSkillUncheckedUpdateManyInput>
  /**
   * Filter which ProfileSkills to update
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * Limit how many ProfileSkills to update.
   */
  limit?: number
}

/**
 * ProfileSkill updateManyAndReturn
 */
export type ProfileSkillUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * The data used to update ProfileSkills.
   */
  data: Prisma.XOR<Prisma.ProfileSkillUpdateManyMutationInput, Prisma.ProfileSkillUncheckedUpdateManyInput>
  /**
   * Filter which ProfileSkills to update
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * Limit how many ProfileSkills to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ProfileSkill upsert
 */
export type ProfileSkillUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * The filter to search for the ProfileSkill to update in case it exists.
   */
  where: Prisma.ProfileSkillWhereUniqueInput
  /**
   * In case the ProfileSkill found by the `where` argument doesn't exist, create a new ProfileSkill with this data.
   */
  create: Prisma.XOR<Prisma.ProfileSkillCreateInput, Prisma.ProfileSkillUncheckedCreateInput>
  /**
   * In case the ProfileSkill was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProfileSkillUpdateInput, Prisma.ProfileSkillUncheckedUpdateInput>
}

/**
 * ProfileSkill delete
 */
export type ProfileSkillDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
  /**
   * Filter which ProfileSkill to delete.
   */
  where: Prisma.ProfileSkillWhereUniqueInput
}

/**
 * ProfileSkill deleteMany
 */
export type ProfileSkillDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProfileSkills to delete
   */
  where?: Prisma.ProfileSkillWhereInput
  /**
   * Limit how many ProfileSkills to delete.
   */
  limit?: number
}

/**
 * ProfileSkill without action
 */
export type ProfileSkillDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProfileSkill
   */
  select?: Prisma.ProfileSkillSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProfileSkill
   */
  omit?: Prisma.ProfileSkillOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileSkillInclude<ExtArgs> | null
}
