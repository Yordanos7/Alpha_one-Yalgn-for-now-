
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Milestone` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Milestone
 * 
 */
export type MilestoneModel = runtime.Types.Result.DefaultSelection<Prisma.$MilestonePayload>

export type AggregateMilestone = {
  _count: MilestoneCountAggregateOutputType | null
  _avg: MilestoneAvgAggregateOutputType | null
  _sum: MilestoneSumAggregateOutputType | null
  _min: MilestoneMinAggregateOutputType | null
  _max: MilestoneMaxAggregateOutputType | null
}

export type MilestoneAvgAggregateOutputType = {
  amount: number | null
}

export type MilestoneSumAggregateOutputType = {
  amount: number | null
}

export type MilestoneMinAggregateOutputType = {
  id: string | null
  contractId: string | null
  title: string | null
  description: string | null
  amount: number | null
  dueDate: Date | null
  isPaid: boolean | null
  createdAt: Date | null
}

export type MilestoneMaxAggregateOutputType = {
  id: string | null
  contractId: string | null
  title: string | null
  description: string | null
  amount: number | null
  dueDate: Date | null
  isPaid: boolean | null
  createdAt: Date | null
}

export type MilestoneCountAggregateOutputType = {
  id: number
  contractId: number
  title: number
  description: number
  amount: number
  dueDate: number
  isPaid: number
  createdAt: number
  _all: number
}


export type MilestoneAvgAggregateInputType = {
  amount?: true
}

export type MilestoneSumAggregateInputType = {
  amount?: true
}

export type MilestoneMinAggregateInputType = {
  id?: true
  contractId?: true
  title?: true
  description?: true
  amount?: true
  dueDate?: true
  isPaid?: true
  createdAt?: true
}

export type MilestoneMaxAggregateInputType = {
  id?: true
  contractId?: true
  title?: true
  description?: true
  amount?: true
  dueDate?: true
  isPaid?: true
  createdAt?: true
}

export type MilestoneCountAggregateInputType = {
  id?: true
  contractId?: true
  title?: true
  description?: true
  amount?: true
  dueDate?: true
  isPaid?: true
  createdAt?: true
  _all?: true
}

export type MilestoneAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Milestone to aggregate.
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Milestones to fetch.
   */
  orderBy?: Prisma.MilestoneOrderByWithRelationInput | Prisma.MilestoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MilestoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Milestones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Milestones.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Milestones
  **/
  _count?: true | MilestoneCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MilestoneAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MilestoneSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MilestoneMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MilestoneMaxAggregateInputType
}

export type GetMilestoneAggregateType<T extends MilestoneAggregateArgs> = {
      [P in keyof T & keyof AggregateMilestone]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMilestone[P]>
    : Prisma.GetScalarType<T[P], AggregateMilestone[P]>
}




export type MilestoneGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MilestoneWhereInput
  orderBy?: Prisma.MilestoneOrderByWithAggregationInput | Prisma.MilestoneOrderByWithAggregationInput[]
  by: Prisma.MilestoneScalarFieldEnum[] | Prisma.MilestoneScalarFieldEnum
  having?: Prisma.MilestoneScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MilestoneCountAggregateInputType | true
  _avg?: MilestoneAvgAggregateInputType
  _sum?: MilestoneSumAggregateInputType
  _min?: MilestoneMinAggregateInputType
  _max?: MilestoneMaxAggregateInputType
}

export type MilestoneGroupByOutputType = {
  id: string
  contractId: string
  title: string
  description: string | null
  amount: number
  dueDate: Date | null
  isPaid: boolean
  createdAt: Date
  _count: MilestoneCountAggregateOutputType | null
  _avg: MilestoneAvgAggregateOutputType | null
  _sum: MilestoneSumAggregateOutputType | null
  _min: MilestoneMinAggregateOutputType | null
  _max: MilestoneMaxAggregateOutputType | null
}

type GetMilestoneGroupByPayload<T extends MilestoneGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MilestoneGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MilestoneGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MilestoneGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MilestoneGroupByOutputType[P]>
      }
    >
  >



export type MilestoneWhereInput = {
  AND?: Prisma.MilestoneWhereInput | Prisma.MilestoneWhereInput[]
  OR?: Prisma.MilestoneWhereInput[]
  NOT?: Prisma.MilestoneWhereInput | Prisma.MilestoneWhereInput[]
  id?: Prisma.StringFilter<"Milestone"> | string
  contractId?: Prisma.StringFilter<"Milestone"> | string
  title?: Prisma.StringFilter<"Milestone"> | string
  description?: Prisma.StringNullableFilter<"Milestone"> | string | null
  amount?: Prisma.FloatFilter<"Milestone"> | number
  dueDate?: Prisma.DateTimeNullableFilter<"Milestone"> | Date | string | null
  isPaid?: Prisma.BoolFilter<"Milestone"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Milestone"> | Date | string
  contract?: Prisma.XOR<Prisma.ContractScalarRelationFilter, Prisma.ContractWhereInput>
}

export type MilestoneOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  contractId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  amount?: Prisma.SortOrder
  dueDate?: Prisma.SortOrderInput | Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  contract?: Prisma.ContractOrderByWithRelationInput
}

export type MilestoneWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.MilestoneWhereInput | Prisma.MilestoneWhereInput[]
  OR?: Prisma.MilestoneWhereInput[]
  NOT?: Prisma.MilestoneWhereInput | Prisma.MilestoneWhereInput[]
  contractId?: Prisma.StringFilter<"Milestone"> | string
  title?: Prisma.StringFilter<"Milestone"> | string
  description?: Prisma.StringNullableFilter<"Milestone"> | string | null
  amount?: Prisma.FloatFilter<"Milestone"> | number
  dueDate?: Prisma.DateTimeNullableFilter<"Milestone"> | Date | string | null
  isPaid?: Prisma.BoolFilter<"Milestone"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Milestone"> | Date | string
  contract?: Prisma.XOR<Prisma.ContractScalarRelationFilter, Prisma.ContractWhereInput>
}, "id">

export type MilestoneOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  contractId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  amount?: Prisma.SortOrder
  dueDate?: Prisma.SortOrderInput | Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.MilestoneCountOrderByAggregateInput
  _avg?: Prisma.MilestoneAvgOrderByAggregateInput
  _max?: Prisma.MilestoneMaxOrderByAggregateInput
  _min?: Prisma.MilestoneMinOrderByAggregateInput
  _sum?: Prisma.MilestoneSumOrderByAggregateInput
}

export type MilestoneScalarWhereWithAggregatesInput = {
  AND?: Prisma.MilestoneScalarWhereWithAggregatesInput | Prisma.MilestoneScalarWhereWithAggregatesInput[]
  OR?: Prisma.MilestoneScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MilestoneScalarWhereWithAggregatesInput | Prisma.MilestoneScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Milestone"> | string
  contractId?: Prisma.StringWithAggregatesFilter<"Milestone"> | string
  title?: Prisma.StringWithAggregatesFilter<"Milestone"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Milestone"> | string | null
  amount?: Prisma.FloatWithAggregatesFilter<"Milestone"> | number
  dueDate?: Prisma.DateTimeNullableWithAggregatesFilter<"Milestone"> | Date | string | null
  isPaid?: Prisma.BoolWithAggregatesFilter<"Milestone"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Milestone"> | Date | string
}

export type MilestoneCreateInput = {
  id?: string
  title: string
  description?: string | null
  amount: number
  dueDate?: Date | string | null
  isPaid?: boolean
  createdAt?: Date | string
  contract: Prisma.ContractCreateNestedOneWithoutMilestonesInput
}

export type MilestoneUncheckedCreateInput = {
  id?: string
  contractId: string
  title: string
  description?: string | null
  amount: number
  dueDate?: Date | string | null
  isPaid?: boolean
  createdAt?: Date | string
}

export type MilestoneUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  contract?: Prisma.ContractUpdateOneRequiredWithoutMilestonesNestedInput
}

export type MilestoneUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  contractId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneCreateManyInput = {
  id?: string
  contractId: string
  title: string
  description?: string | null
  amount: number
  dueDate?: Date | string | null
  isPaid?: boolean
  createdAt?: Date | string
}

export type MilestoneUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  contractId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneListRelationFilter = {
  every?: Prisma.MilestoneWhereInput
  some?: Prisma.MilestoneWhereInput
  none?: Prisma.MilestoneWhereInput
}

export type MilestoneOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MilestoneCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  contractId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  dueDate?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type MilestoneAvgOrderByAggregateInput = {
  amount?: Prisma.SortOrder
}

export type MilestoneMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  contractId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  dueDate?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type MilestoneMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  contractId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  amount?: Prisma.SortOrder
  dueDate?: Prisma.SortOrder
  isPaid?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type MilestoneSumOrderByAggregateInput = {
  amount?: Prisma.SortOrder
}

export type MilestoneCreateNestedManyWithoutContractInput = {
  create?: Prisma.XOR<Prisma.MilestoneCreateWithoutContractInput, Prisma.MilestoneUncheckedCreateWithoutContractInput> | Prisma.MilestoneCreateWithoutContractInput[] | Prisma.MilestoneUncheckedCreateWithoutContractInput[]
  connectOrCreate?: Prisma.MilestoneCreateOrConnectWithoutContractInput | Prisma.MilestoneCreateOrConnectWithoutContractInput[]
  createMany?: Prisma.MilestoneCreateManyContractInputEnvelope
  connect?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
}

export type MilestoneUncheckedCreateNestedManyWithoutContractInput = {
  create?: Prisma.XOR<Prisma.MilestoneCreateWithoutContractInput, Prisma.MilestoneUncheckedCreateWithoutContractInput> | Prisma.MilestoneCreateWithoutContractInput[] | Prisma.MilestoneUncheckedCreateWithoutContractInput[]
  connectOrCreate?: Prisma.MilestoneCreateOrConnectWithoutContractInput | Prisma.MilestoneCreateOrConnectWithoutContractInput[]
  createMany?: Prisma.MilestoneCreateManyContractInputEnvelope
  connect?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
}

export type MilestoneUpdateManyWithoutContractNestedInput = {
  create?: Prisma.XOR<Prisma.MilestoneCreateWithoutContractInput, Prisma.MilestoneUncheckedCreateWithoutContractInput> | Prisma.MilestoneCreateWithoutContractInput[] | Prisma.MilestoneUncheckedCreateWithoutContractInput[]
  connectOrCreate?: Prisma.MilestoneCreateOrConnectWithoutContractInput | Prisma.MilestoneCreateOrConnectWithoutContractInput[]
  upsert?: Prisma.MilestoneUpsertWithWhereUniqueWithoutContractInput | Prisma.MilestoneUpsertWithWhereUniqueWithoutContractInput[]
  createMany?: Prisma.MilestoneCreateManyContractInputEnvelope
  set?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  disconnect?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  delete?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  connect?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  update?: Prisma.MilestoneUpdateWithWhereUniqueWithoutContractInput | Prisma.MilestoneUpdateWithWhereUniqueWithoutContractInput[]
  updateMany?: Prisma.MilestoneUpdateManyWithWhereWithoutContractInput | Prisma.MilestoneUpdateManyWithWhereWithoutContractInput[]
  deleteMany?: Prisma.MilestoneScalarWhereInput | Prisma.MilestoneScalarWhereInput[]
}

export type MilestoneUncheckedUpdateManyWithoutContractNestedInput = {
  create?: Prisma.XOR<Prisma.MilestoneCreateWithoutContractInput, Prisma.MilestoneUncheckedCreateWithoutContractInput> | Prisma.MilestoneCreateWithoutContractInput[] | Prisma.MilestoneUncheckedCreateWithoutContractInput[]
  connectOrCreate?: Prisma.MilestoneCreateOrConnectWithoutContractInput | Prisma.MilestoneCreateOrConnectWithoutContractInput[]
  upsert?: Prisma.MilestoneUpsertWithWhereUniqueWithoutContractInput | Prisma.MilestoneUpsertWithWhereUniqueWithoutContractInput[]
  createMany?: Prisma.MilestoneCreateManyContractInputEnvelope
  set?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  disconnect?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  delete?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  connect?: Prisma.MilestoneWhereUniqueInput | Prisma.MilestoneWhereUniqueInput[]
  update?: Prisma.MilestoneUpdateWithWhereUniqueWithoutContractInput | Prisma.MilestoneUpdateWithWhereUniqueWithoutContractInput[]
  updateMany?: Prisma.MilestoneUpdateManyWithWhereWithoutContractInput | Prisma.MilestoneUpdateManyWithWhereWithoutContractInput[]
  deleteMany?: Prisma.MilestoneScalarWhereInput | Prisma.MilestoneScalarWhereInput[]
}

export type MilestoneCreateWithoutContractInput = {
  id?: string
  title: string
  description?: string | null
  amount: number
  dueDate?: Date | string | null
  isPaid?: boolean
  createdAt?: Date | string
}

export type MilestoneUncheckedCreateWithoutContractInput = {
  id?: string
  title: string
  description?: string | null
  amount: number
  dueDate?: Date | string | null
  isPaid?: boolean
  createdAt?: Date | string
}

export type MilestoneCreateOrConnectWithoutContractInput = {
  where: Prisma.MilestoneWhereUniqueInput
  create: Prisma.XOR<Prisma.MilestoneCreateWithoutContractInput, Prisma.MilestoneUncheckedCreateWithoutContractInput>
}

export type MilestoneCreateManyContractInputEnvelope = {
  data: Prisma.MilestoneCreateManyContractInput | Prisma.MilestoneCreateManyContractInput[]
  skipDuplicates?: boolean
}

export type MilestoneUpsertWithWhereUniqueWithoutContractInput = {
  where: Prisma.MilestoneWhereUniqueInput
  update: Prisma.XOR<Prisma.MilestoneUpdateWithoutContractInput, Prisma.MilestoneUncheckedUpdateWithoutContractInput>
  create: Prisma.XOR<Prisma.MilestoneCreateWithoutContractInput, Prisma.MilestoneUncheckedCreateWithoutContractInput>
}

export type MilestoneUpdateWithWhereUniqueWithoutContractInput = {
  where: Prisma.MilestoneWhereUniqueInput
  data: Prisma.XOR<Prisma.MilestoneUpdateWithoutContractInput, Prisma.MilestoneUncheckedUpdateWithoutContractInput>
}

export type MilestoneUpdateManyWithWhereWithoutContractInput = {
  where: Prisma.MilestoneScalarWhereInput
  data: Prisma.XOR<Prisma.MilestoneUpdateManyMutationInput, Prisma.MilestoneUncheckedUpdateManyWithoutContractInput>
}

export type MilestoneScalarWhereInput = {
  AND?: Prisma.MilestoneScalarWhereInput | Prisma.MilestoneScalarWhereInput[]
  OR?: Prisma.MilestoneScalarWhereInput[]
  NOT?: Prisma.MilestoneScalarWhereInput | Prisma.MilestoneScalarWhereInput[]
  id?: Prisma.StringFilter<"Milestone"> | string
  contractId?: Prisma.StringFilter<"Milestone"> | string
  title?: Prisma.StringFilter<"Milestone"> | string
  description?: Prisma.StringNullableFilter<"Milestone"> | string | null
  amount?: Prisma.FloatFilter<"Milestone"> | number
  dueDate?: Prisma.DateTimeNullableFilter<"Milestone"> | Date | string | null
  isPaid?: Prisma.BoolFilter<"Milestone"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Milestone"> | Date | string
}

export type MilestoneCreateManyContractInput = {
  id?: string
  title: string
  description?: string | null
  amount: number
  dueDate?: Date | string | null
  isPaid?: boolean
  createdAt?: Date | string
}

export type MilestoneUpdateWithoutContractInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneUncheckedUpdateWithoutContractInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MilestoneUncheckedUpdateManyWithoutContractInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  amount?: Prisma.FloatFieldUpdateOperationsInput | number
  dueDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  isPaid?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type MilestoneSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  contractId?: boolean
  title?: boolean
  description?: boolean
  amount?: boolean
  dueDate?: boolean
  isPaid?: boolean
  createdAt?: boolean
  contract?: boolean | Prisma.ContractDefaultArgs<ExtArgs>
}, ExtArgs["result"]["milestone"]>

export type MilestoneSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  contractId?: boolean
  title?: boolean
  description?: boolean
  amount?: boolean
  dueDate?: boolean
  isPaid?: boolean
  createdAt?: boolean
  contract?: boolean | Prisma.ContractDefaultArgs<ExtArgs>
}, ExtArgs["result"]["milestone"]>

export type MilestoneSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  contractId?: boolean
  title?: boolean
  description?: boolean
  amount?: boolean
  dueDate?: boolean
  isPaid?: boolean
  createdAt?: boolean
  contract?: boolean | Prisma.ContractDefaultArgs<ExtArgs>
}, ExtArgs["result"]["milestone"]>

export type MilestoneSelectScalar = {
  id?: boolean
  contractId?: boolean
  title?: boolean
  description?: boolean
  amount?: boolean
  dueDate?: boolean
  isPaid?: boolean
  createdAt?: boolean
}

export type MilestoneOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "contractId" | "title" | "description" | "amount" | "dueDate" | "isPaid" | "createdAt", ExtArgs["result"]["milestone"]>
export type MilestoneInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  contract?: boolean | Prisma.ContractDefaultArgs<ExtArgs>
}
export type MilestoneIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  contract?: boolean | Prisma.ContractDefaultArgs<ExtArgs>
}
export type MilestoneIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  contract?: boolean | Prisma.ContractDefaultArgs<ExtArgs>
}

export type $MilestonePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Milestone"
  objects: {
    contract: Prisma.$ContractPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    contractId: string
    title: string
    description: string | null
    amount: number
    dueDate: Date | null
    isPaid: boolean
    createdAt: Date
  }, ExtArgs["result"]["milestone"]>
  composites: {}
}

export type MilestoneGetPayload<S extends boolean | null | undefined | MilestoneDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MilestonePayload, S>

export type MilestoneCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MilestoneFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MilestoneCountAggregateInputType | true
  }

export interface MilestoneDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Milestone'], meta: { name: 'Milestone' } }
  /**
   * Find zero or one Milestone that matches the filter.
   * @param {MilestoneFindUniqueArgs} args - Arguments to find a Milestone
   * @example
   * // Get one Milestone
   * const milestone = await prisma.milestone.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MilestoneFindUniqueArgs>(args: Prisma.SelectSubset<T, MilestoneFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Milestone that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MilestoneFindUniqueOrThrowArgs} args - Arguments to find a Milestone
   * @example
   * // Get one Milestone
   * const milestone = await prisma.milestone.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MilestoneFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MilestoneFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Milestone that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneFindFirstArgs} args - Arguments to find a Milestone
   * @example
   * // Get one Milestone
   * const milestone = await prisma.milestone.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MilestoneFindFirstArgs>(args?: Prisma.SelectSubset<T, MilestoneFindFirstArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Milestone that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneFindFirstOrThrowArgs} args - Arguments to find a Milestone
   * @example
   * // Get one Milestone
   * const milestone = await prisma.milestone.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MilestoneFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MilestoneFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Milestones that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Milestones
   * const milestones = await prisma.milestone.findMany()
   * 
   * // Get first 10 Milestones
   * const milestones = await prisma.milestone.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const milestoneWithIdOnly = await prisma.milestone.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MilestoneFindManyArgs>(args?: Prisma.SelectSubset<T, MilestoneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Milestone.
   * @param {MilestoneCreateArgs} args - Arguments to create a Milestone.
   * @example
   * // Create one Milestone
   * const Milestone = await prisma.milestone.create({
   *   data: {
   *     // ... data to create a Milestone
   *   }
   * })
   * 
   */
  create<T extends MilestoneCreateArgs>(args: Prisma.SelectSubset<T, MilestoneCreateArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Milestones.
   * @param {MilestoneCreateManyArgs} args - Arguments to create many Milestones.
   * @example
   * // Create many Milestones
   * const milestone = await prisma.milestone.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MilestoneCreateManyArgs>(args?: Prisma.SelectSubset<T, MilestoneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Milestones and returns the data saved in the database.
   * @param {MilestoneCreateManyAndReturnArgs} args - Arguments to create many Milestones.
   * @example
   * // Create many Milestones
   * const milestone = await prisma.milestone.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Milestones and only return the `id`
   * const milestoneWithIdOnly = await prisma.milestone.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends MilestoneCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, MilestoneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Milestone.
   * @param {MilestoneDeleteArgs} args - Arguments to delete one Milestone.
   * @example
   * // Delete one Milestone
   * const Milestone = await prisma.milestone.delete({
   *   where: {
   *     // ... filter to delete one Milestone
   *   }
   * })
   * 
   */
  delete<T extends MilestoneDeleteArgs>(args: Prisma.SelectSubset<T, MilestoneDeleteArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Milestone.
   * @param {MilestoneUpdateArgs} args - Arguments to update one Milestone.
   * @example
   * // Update one Milestone
   * const milestone = await prisma.milestone.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MilestoneUpdateArgs>(args: Prisma.SelectSubset<T, MilestoneUpdateArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Milestones.
   * @param {MilestoneDeleteManyArgs} args - Arguments to filter Milestones to delete.
   * @example
   * // Delete a few Milestones
   * const { count } = await prisma.milestone.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MilestoneDeleteManyArgs>(args?: Prisma.SelectSubset<T, MilestoneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Milestones.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Milestones
   * const milestone = await prisma.milestone.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MilestoneUpdateManyArgs>(args: Prisma.SelectSubset<T, MilestoneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Milestones and returns the data updated in the database.
   * @param {MilestoneUpdateManyAndReturnArgs} args - Arguments to update many Milestones.
   * @example
   * // Update many Milestones
   * const milestone = await prisma.milestone.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Milestones and only return the `id`
   * const milestoneWithIdOnly = await prisma.milestone.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends MilestoneUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, MilestoneUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Milestone.
   * @param {MilestoneUpsertArgs} args - Arguments to update or create a Milestone.
   * @example
   * // Update or create a Milestone
   * const milestone = await prisma.milestone.upsert({
   *   create: {
   *     // ... data to create a Milestone
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Milestone we want to update
   *   }
   * })
   */
  upsert<T extends MilestoneUpsertArgs>(args: Prisma.SelectSubset<T, MilestoneUpsertArgs<ExtArgs>>): Prisma.Prisma__MilestoneClient<runtime.Types.Result.GetResult<Prisma.$MilestonePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Milestones.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneCountArgs} args - Arguments to filter Milestones to count.
   * @example
   * // Count the number of Milestones
   * const count = await prisma.milestone.count({
   *   where: {
   *     // ... the filter for the Milestones we want to count
   *   }
   * })
  **/
  count<T extends MilestoneCountArgs>(
    args?: Prisma.Subset<T, MilestoneCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MilestoneCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Milestone.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MilestoneAggregateArgs>(args: Prisma.Subset<T, MilestoneAggregateArgs>): Prisma.PrismaPromise<GetMilestoneAggregateType<T>>

  /**
   * Group by Milestone.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MilestoneGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MilestoneGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MilestoneGroupByArgs['orderBy'] }
      : { orderBy?: MilestoneGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MilestoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMilestoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Milestone model
 */
readonly fields: MilestoneFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Milestone.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MilestoneClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  contract<T extends Prisma.ContractDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ContractDefaultArgs<ExtArgs>>): Prisma.Prisma__ContractClient<runtime.Types.Result.GetResult<Prisma.$ContractPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Milestone model
 */
export interface MilestoneFieldRefs {
  readonly id: Prisma.FieldRef<"Milestone", 'String'>
  readonly contractId: Prisma.FieldRef<"Milestone", 'String'>
  readonly title: Prisma.FieldRef<"Milestone", 'String'>
  readonly description: Prisma.FieldRef<"Milestone", 'String'>
  readonly amount: Prisma.FieldRef<"Milestone", 'Float'>
  readonly dueDate: Prisma.FieldRef<"Milestone", 'DateTime'>
  readonly isPaid: Prisma.FieldRef<"Milestone", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Milestone", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Milestone findUnique
 */
export type MilestoneFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * Filter, which Milestone to fetch.
   */
  where: Prisma.MilestoneWhereUniqueInput
}

/**
 * Milestone findUniqueOrThrow
 */
export type MilestoneFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * Filter, which Milestone to fetch.
   */
  where: Prisma.MilestoneWhereUniqueInput
}

/**
 * Milestone findFirst
 */
export type MilestoneFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * Filter, which Milestone to fetch.
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Milestones to fetch.
   */
  orderBy?: Prisma.MilestoneOrderByWithRelationInput | Prisma.MilestoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Milestones.
   */
  cursor?: Prisma.MilestoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Milestones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Milestones.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Milestones.
   */
  distinct?: Prisma.MilestoneScalarFieldEnum | Prisma.MilestoneScalarFieldEnum[]
}

/**
 * Milestone findFirstOrThrow
 */
export type MilestoneFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * Filter, which Milestone to fetch.
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Milestones to fetch.
   */
  orderBy?: Prisma.MilestoneOrderByWithRelationInput | Prisma.MilestoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Milestones.
   */
  cursor?: Prisma.MilestoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Milestones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Milestones.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Milestones.
   */
  distinct?: Prisma.MilestoneScalarFieldEnum | Prisma.MilestoneScalarFieldEnum[]
}

/**
 * Milestone findMany
 */
export type MilestoneFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * Filter, which Milestones to fetch.
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Milestones to fetch.
   */
  orderBy?: Prisma.MilestoneOrderByWithRelationInput | Prisma.MilestoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Milestones.
   */
  cursor?: Prisma.MilestoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Milestones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Milestones.
   */
  skip?: number
  distinct?: Prisma.MilestoneScalarFieldEnum | Prisma.MilestoneScalarFieldEnum[]
}

/**
 * Milestone create
 */
export type MilestoneCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * The data needed to create a Milestone.
   */
  data: Prisma.XOR<Prisma.MilestoneCreateInput, Prisma.MilestoneUncheckedCreateInput>
}

/**
 * Milestone createMany
 */
export type MilestoneCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Milestones.
   */
  data: Prisma.MilestoneCreateManyInput | Prisma.MilestoneCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Milestone createManyAndReturn
 */
export type MilestoneCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * The data used to create many Milestones.
   */
  data: Prisma.MilestoneCreateManyInput | Prisma.MilestoneCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Milestone update
 */
export type MilestoneUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * The data needed to update a Milestone.
   */
  data: Prisma.XOR<Prisma.MilestoneUpdateInput, Prisma.MilestoneUncheckedUpdateInput>
  /**
   * Choose, which Milestone to update.
   */
  where: Prisma.MilestoneWhereUniqueInput
}

/**
 * Milestone updateMany
 */
export type MilestoneUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Milestones.
   */
  data: Prisma.XOR<Prisma.MilestoneUpdateManyMutationInput, Prisma.MilestoneUncheckedUpdateManyInput>
  /**
   * Filter which Milestones to update
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * Limit how many Milestones to update.
   */
  limit?: number
}

/**
 * Milestone updateManyAndReturn
 */
export type MilestoneUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * The data used to update Milestones.
   */
  data: Prisma.XOR<Prisma.MilestoneUpdateManyMutationInput, Prisma.MilestoneUncheckedUpdateManyInput>
  /**
   * Filter which Milestones to update
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * Limit how many Milestones to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Milestone upsert
 */
export type MilestoneUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * The filter to search for the Milestone to update in case it exists.
   */
  where: Prisma.MilestoneWhereUniqueInput
  /**
   * In case the Milestone found by the `where` argument doesn't exist, create a new Milestone with this data.
   */
  create: Prisma.XOR<Prisma.MilestoneCreateInput, Prisma.MilestoneUncheckedCreateInput>
  /**
   * In case the Milestone was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MilestoneUpdateInput, Prisma.MilestoneUncheckedUpdateInput>
}

/**
 * Milestone delete
 */
export type MilestoneDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
  /**
   * Filter which Milestone to delete.
   */
  where: Prisma.MilestoneWhereUniqueInput
}

/**
 * Milestone deleteMany
 */
export type MilestoneDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Milestones to delete
   */
  where?: Prisma.MilestoneWhereInput
  /**
   * Limit how many Milestones to delete.
   */
  limit?: number
}

/**
 * Milestone without action
 */
export type MilestoneDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Milestone
   */
  select?: Prisma.MilestoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Milestone
   */
  omit?: Prisma.MilestoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MilestoneInclude<ExtArgs> | null
}
