
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
globalThis['__dirname'] = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
export * from "./enums"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node")
path.join(process.cwd(), "packages/db/prisma/src/generated/libquery_engine-debian-openssl-3.0.x.so.node")

/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Session
 * 
 */
export type Session = Prisma.SessionModel
/**
 * Model Account
 * 
 */
export type Account = Prisma.AccountModel
/**
 * Model Profile
 * 
 */
export type Profile = Prisma.ProfileModel
/**
 * Model Skill
 * 
 */
export type Skill = Prisma.SkillModel
/**
 * Model ProfileSkill
 * 
 */
export type ProfileSkill = Prisma.ProfileSkillModel
/**
 * Model Category
 * 
 */
export type Category = Prisma.CategoryModel
/**
 * Model Listing
 * 
 */
export type Listing = Prisma.ListingModel
/**
 * Model Job
 * 
 */
export type Job = Prisma.JobModel
/**
 * Model Proposal
 * 
 */
export type Proposal = Prisma.ProposalModel
/**
 * Model Contract
 * 
 */
export type Contract = Prisma.ContractModel
/**
 * Model Milestone
 * 
 */
export type Milestone = Prisma.MilestoneModel
/**
 * Model Wallet
 * 
 */
export type Wallet = Prisma.WalletModel
/**
 * Model Transaction
 * 
 */
export type Transaction = Prisma.TransactionModel
/**
 * Model CoinPurchase
 * 
 */
export type CoinPurchase = Prisma.CoinPurchaseModel
/**
 * Model Conversation
 * 
 */
export type Conversation = Prisma.ConversationModel
/**
 * Model Message
 * 
 */
export type Message = Prisma.MessageModel
/**
 * Model Review
 * 
 */
export type Review = Prisma.ReviewModel
/**
 * Model Portfolio
 * 
 */
export type Portfolio = Prisma.PortfolioModel
/**
 * Model Notification
 * 
 */
export type Notification = Prisma.NotificationModel
/**
 * Model AdminNote
 * 
 */
export type AdminNote = Prisma.AdminNoteModel
/**
 * Model Verification
 * 
 */
export type Verification = Prisma.VerificationModel
/**
 * Model Dispute
 * 
 */
export type Dispute = Prisma.DisputeModel
